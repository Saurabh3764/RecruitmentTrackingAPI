// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecruitmentTrackingAPI.Data;

#nullable disable

namespace RecruitmentTrackingAPI.Migrations
{
    [DbContext(typeof(RecruitmentDBContext))]
    [Migration("20250601111400_Added all Domains")]
    partial class AddedallDomains
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecruitmentTrackingAPI.Domains.Admins", b =>
                {
                    b.Property<Guid>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("RecruitmentTrackingAPI.Domains.Applicants", b =>
                {
                    b.Property<Guid>("ApplicantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fresher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("JobApplicationsApplicationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LinkedIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicantID");

                    b.HasIndex("JobApplicationsApplicationID");

                    b.ToTable("Applicant");
                });

            modelBuilder.Entity("RecruitmentTrackingAPI.Domains.HiringManager", b =>
                {
                    b.Property<Guid>("ManagerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Contact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Email")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Name")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ManagerID");

                    b.ToTable("ConcernedManager");
                });

            modelBuilder.Entity("RecruitmentTrackingAPI.Domains.JobApplications", b =>
                {
                    b.Property<Guid>("ApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfApplication")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JobID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationID");

                    b.ToTable("JobApplication");
                });

            modelBuilder.Entity("RecruitmentTrackingAPI.Domains.OpenJobs", b =>
                {
                    b.Property<Guid>("JobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ManagerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfOpenJobs")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobID");

                    b.HasIndex("ManagerID");

                    b.ToTable("OpenJob");
                });

            modelBuilder.Entity("RecruitmentTrackingAPI.Domains.Applicants", b =>
                {
                    b.HasOne("RecruitmentTrackingAPI.Domains.JobApplications", null)
                        .WithMany("Applicants")
                        .HasForeignKey("JobApplicationsApplicationID");
                });

            modelBuilder.Entity("RecruitmentTrackingAPI.Domains.OpenJobs", b =>
                {
                    b.HasOne("RecruitmentTrackingAPI.Domains.HiringManager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("RecruitmentTrackingAPI.Domains.JobApplications", b =>
                {
                    b.Navigation("Applicants");
                });
#pragma warning restore 612, 618
        }
    }
}
